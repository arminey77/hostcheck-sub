- name: Expected Netmask and Gateway
  debug:
    msg: "netmask: {{ network.netmask }} \ngateway: {{ network.gateway }}"
    verbosity: 1

- name: Actuall Netmask and Gateway
  debug:
    msg: "netmask: {{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ansible.utils.ipaddr('prefix') }}\ngateway: {{ ansible_default_ipv4.gateway }}"
    verbosity: 1

- assert:
    that:
      - (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ansible.utils.ipaddr('prefix') == network.netmask
      - ansible_default_ipv4.gateway == network.gateway
    fail_msg: "CH (Netmask/Gateway): FAIL"
    success_msg: "CH (Netmask/Gateway): PASS"

- name: Find Netplan config file
  ansible.builtin.find:
    paths: "/etc/netplan"
    patterns: "*.yaml"
  register: netplan_file


- name: Read the Netplan config file
  ansible.builtin.slurp:
    src: "{{ netplan_file.files[0].path }}"
  register: netplan_content


- name: Decode Netplan YAML content
  ansible.builtin.set_fact:
    netplan_config: "{{ netplan_content.content | b64decode | from_yaml }}"


- name: Determine ethernet interface name and default gateway
  ansible.builtin.set_fact:
    ethernet_interface: "{{ netplan_config['network']['ethernets'] | dict2items | map(attribute='key') | list | first }}"
    default_gateway: "{{ netplan_config['network']['ethernets'] | dict2items | map(attribute='value') | map(attribute='routes') | select('defined') | flatten | selectattr('to', 'equalto', 'default') | map(attribute='via') | first }}"


- name: Determine IP address
  ansible.builtin.set_fact:
    ip_address: "{{ netplan_config['network']['ethernets'][ethernet_interface]['addresses'] | first }}"


- name: Backup current Netplan config
  ansible.builtin.copy:
    src: "{{ netplan_file.files[0].path }}"
    dest: "{{ netplan_file.files[0].path }}.backup"
    remote_src: true


- name: Generate new Netplan configuration
  ansible.builtin.template:
    src: netplan_template.j2
    dest: "{{ netplan_file.files[0].path }}"


- name: Apply Netplan configuration
  ansible.builtin.shell:
    cmd: "netplan apply"